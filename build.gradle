// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.2.51'

//    ext.kotlin_version = '1.2.40'
    ext.buildConfig = [
            'compileSdk': 28,
            'minSdk'    : 21,
            'targetSdk' : 28,

            'version'   : [
                    'major': 1,
                    'minor': 0,
                    'patch': 0,
                    'build': 1,
            ],
    ]
    ext.buildConfig.version['name'] = "${buildConfig.version.major}.${buildConfig.version.minor}.${buildConfig.version.patch}"
    ext.buildConfig.version['code'] = buildConfig.version.major * 1000000 + buildConfig.version.minor * 10000 + buildConfig.version.patch * 100 + buildConfig.version.build

    ext.versions = [
            //TODO: versions
            'androidX'           : '28.0.0-beta01',
            'constraintLayout': '1.1.2',
            'kotlin'             : '1.2.51',
            'kotlinCoroutines'   : '0.24.0',
            'kotlinSerialization': '0.4',
            'okhttp'             : '3.11.0',
            'retrofit'           : '2.4.0',
            'kotshi'             : '1.0.2',
            'dagger'             : '2.16',
            'rxbinding'          : '2.1.1',
            'moshi'              : '1.6.0',
            'arch'               : [
                    'extensions': '1.1.1',
                    'room'      : '1.1.1',
                    'paging'    : '1.0.0'
            ],
            'glide'              : '3.7.0',
            'stetho'             : '1.5.0',
            'objectbox'          : '2.0.0',
            'ktx'                : '0.3',
            'anko'               : '0.10.5'


    ]


    ext.deps = [
            'kotlin'              : [
                    'stdlib'       : [
                            'common': "org.jetbrains.kotlin:kotlin-stdlib-common:${versions.kotlin}",
                            'jdk'   : "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
                    ],
                    'test'         : [
                            'common'     : "org.jetbrains.kotlin:kotlin-test-common:${versions.kotlin}",
                            'annotations': "org.jetbrains.kotlin:kotlin-test-annotations-common:${versions.kotlin}",
                            'jdk'        : "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}",
                    ],
                    'coroutines'   : [
                            'jdk'    : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlinCoroutines}",
                            'android': "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlinCoroutines}",
                    ],
                    'serialization': [
                            'common': "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:${versions.kotlinSerialization}",
                            'jdk'   : "org.jetbrains.kotlinx:kotlinx-serialization-runtime:${versions.kotlinSerialization}",
                    ],
            ],
            'android'             : [

                    'anko': [
                            'common'      : "org.jetbrains.anko:anko-commons:${versions.anko}",
                            'commonCompat': "org.jetbrains.anko:anko-appcompat-v7-commons:${versions.anko}"
                    ],

                    //TODO: arch
                    'arch': [
                            'room'     : [
                                    'runtime' : "android.arch.persistence.room:runtime:${versions.arch.room}",
                                    'compiler': "android.arch.persistence.room:compiler:${versions.arch.room}",
                                    'testing' : "android.arch.persistence.room:testing:${versions.arch.room}"
                            ],
                            'lifecycle': [
                                    'extensions': "android.arch.lifecycle:extensions:${versions.arch.extensions}",
                                    'compiler'  : "android.arch.lifecycle:compiler:${versions.arch.extensions}"
                            ],
                            'paging'   : [
                                    'runtime': "android.arch.paging:runtime:${versions.arch.paging}"
                            ]
                    ],
                    //TODO: support
                    'x'   : [
                            'annotations'       : "com.android.support:support-annotations:${versions.androidX}",
                            'recyclerView'      : "com.android.support:recyclerview-v7:${versions.androidX}",
                            'customTabs'        : "com.android.support:customtabs:${versions.androidX}",
                            'design'            : "com.android.support:design:${versions.androidX}",
                            'constraintLayout'  : "com.android.support.constraint:constraint-layout:${versions.constraintLayout}",
                            'appCompat'         : "com.android.support:appcompat-v7:${versions.androidX}",
                            'fragment'          : "com.android.support:support-fragment:${versions.androidX}",
                            'viewpager'         : "com.android.support:viewpager:${versions.androidX}",
                            'coordinatorlayout' : "com.android.support:coordinatorlayout:${versions.androidX}",
                            'swiperefreshlayout': "com.android.support:swiperefreshlayout:${versions.androidX}"
                    ],
                    'ktx' : [
                            'coreKtx': "androidx.core:core-ktx:${versions.ktx}",
                    ],
                    'test': [
                            'runner': "com.android.support.test:runner:${versions.atsl}",
                            'rules' : "com.android.support.test:rules${versions.atsl}",
                    ],
            ],
            'okhttp'              : [
                    'client'       : "com.squareup.okhttp3:okhttp:${versions.okhttp}",
                    'logging'      : "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}",
                    'mockWebServer': "com.squareup.okhttp3:mockwebserver:${versions.okhttp}",
            ],
            'retrofit'            : [

                    'client'        : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
                    'converterMoshi': "com.squareup.retrofit2:converter-moshi:${versions.retrofit}",
                    'koroutine'     : "ru.gildor.coroutines:kotlin-coroutines-retrofit:0.11.0"
            ],

            'kotshi'              : [
                    'api'     : "se.ansman.kotshi:api:${versions.kotshi}",
                    'compiler': "se.ansman.kotshi:compiler:${versions.kotshi}",
            ],
            //TODO: dagger
            'dagger'              : [
                    'runtime' : "com.google.dagger:dagger:${versions.dagger}",
                    'compiler': "com.google.dagger:dagger-compiler:${versions.dagger}",
                    'android' : [
                            'runtime'  : "com.google.dagger:dagger-android:${versions.dagger}",
                            'support'  : "com.google.dagger:dagger-android-support:${versions.dagger}",
                            'proccesor': "com.google.dagger:dagger-android-processor:${versions.dagger}"
                    ]
            ],

            'butterknife'         : [
                    'runtime'  : "com.jakewharton:butterknife:8.8.1",
                    'proccesor': "com.jakewharton:butterknife-compiler:8.8.1"
            ],

            'objectbox'           : [
                    "android"  : "io.objectbox:objectbox-android:${versions.objectbox}",
                    "kotlin"   : "io.objectbox:objectbox-kotlin:${versions.objectbox}",
                    "processor": "io.objectbox:objectbox-processor:${versions.objectbox}"
            ],
            'moshi'               : "com.squareup.moshi:moshi:${versions.moshi}",
            'moshi-kotlin-codegen': "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}",
            // not recommended
            'groupie'             : "com.xwray:groupie:2.1.0",
            'groupie.kotlin'      : "com.xwray:groupie-kotlin-android-extensions:2.1.0",
            // use epoxy instead as it's battle tested.

            'threetenbp'          : 'com.jakewharton.threetenabp:threetenabp:1.1.0',

            'stetho'              : "com.facebook.stetho:stetho:${versions.stetho}",
            'stetho.okhttp'       : "com.facebook.stetho:stetho-okhttp3:${versions.stetho}",
            'glide'               : "com.github.bumptech.glide:glide:${versions.glide}",
            'picasso'             : "com.squareup.picasso:picasso:2.71828",
            'okio'                : 'com.squareup.okio:okio:1.13.0',
            'timber'              : 'com.jakewharton.timber:timber:4.6.0',
            'junit'               : 'junit:junit:4.12',
            'bugsnag'             : 'com.bugsnag:bugsnag-android:4.2.2',
            'alerter'             : 'com.tapadoo.android:alerter:2.0.4',
            'scalingLayout'       : "com.github.iammert:ScalingLayout:1.2.1",
            'mpchart'             : "com.github.PhilJay:MPAndroidChart:v3.0.3"


    ]


    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.0-alpha08'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "io.objectbox:objectbox-gradle-plugin:${versions.objectbox}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

    }
}



allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url "https://jitpack.io" }

        maven {
            url "https://kay.bintray.com/KayArch"
        }
    }

//    'annotations'      : "androidx.annotation:annotation:${versions.androidX}",
//    'recyclerView'     : "androidx.recyclerview:recyclerview:${versions.androidX}",
//    'customTabs'       : "androidx.browser:browser:${versions.androidX}",
//    'design'           : "com.google.android.material:material:${versions.androidX}",
//    'constraintLayout' : 'androidx.constraintlayout:constraintlayout:1.1.2',
//    'appCompat'        : "androidx.appcompat:appcompat:${versions.androidX}",
//    'fragment'         : "androidx.fragment:fragment:${versions.androidX}",
//    'viewpager'        : "com.android.support:viewpager:${versions.androidX}",
//    'coordinatorlayout': "androidx.coordinatorlayout:coordinatorlayout:${versions.androidX}",
//    'swiperefreshlayout':"androidx.swiperefreshlayout:swiperefreshlayout:${versions.androidX}"

    def androidxGroups = [
            "androidx.annotation",
            "androidx.recyclerview",
            "androidx.browser",
            "com.google.android.material",
            "androidx.appcompat",
            "androidx.fragment",
            "androidx.coordinatorlayout",
            "androidx.swiperefreshlayout"
    ]

    def archGroups = ["androidx.lifecycle"]

    // Force all of the primary support libraries to use the same version.
    configurations.all {
        resolutionStrategy {
            eachDependency { details ->


//                if (details.requested.group in androidxGroups) {
//                    details.useVersion versions.androidX
//                }

//                if (details.requested.group in archGroups) {
//                    details.useVersion "2.0.0-beta01"
//                }

//                if (details.requested.group == 'com.android.support') {
//                    details.useVersion versions.supportLibrary
//                }
                if (details.requested.group == 'com.squareup.okhttp3') {
                    details.useVersion versions.okhttp
                }


                if (details.requested.group == 'com.squareup.moshi') {
                    details.useVersion '1.6.0'
                }

                if (details.requested.name == "kotlin-compiler-embeddable") {
                    details.useVersion "1.2.51"
                }
            }
        }
    }
}




task clean(type: Delete) {
    delete rootProject.buildDir
}
